#!/bin/bash

normalize_title () {
  title_song="$1"
  title_song_normalized=""
  title_song="${title_song//\(*\)}"
  title_song="${title_song//\[*\]}"
  title_song="${title_song//\{*\}}"

  title_song="${title_song#"${title_song%%[![:space:]]*}"}"
  title_song="${title_song%"${title_song##*[![:space:]]}"}"

  # Remove extra spaces
  title_song="${title_song//  / }"
  string_length=${#title_song}

  if [[ "$string_length" -gt 55 ]]; then
    n=1
    for ((i = 0; i < ${#title_song}; i++)); do
      current_char="${title_song:i:1}"
      if [[ n -le 56 ]]; then
        title_song_normalized+=$current_char
      fi
      ((n++))
    done
    title_song_normalized="$title_song_normalized..."
  else
    title_song_normalized="$title_song"
  fi

  title_song_normalized="${title_song_normalized//\(*\)}"

  # Remove extra spaces
  title_song_normalized="${title_song_normalized//  / }"

  echo -n "$title_song_normalized"
}
#play music
case "$1" in
  --next)
    playerctl next
    ;;
  --prev)
    playerctl previous
    ;;
  --play-pause)
    browse () {
      if ps -A | grep -q "firefox"; then
        xdg-open $1
      else
        nohup firefox >/dev/null 2>&1 &
        sleep 2
        xdg-open $1
      fi
    }

    status=$(playerctl status 2>/dev/null)


    if [[ "$status" == "Playing" ]]; then
      playerctl play-pause
    elif [[ "$status" == "Paused" ]]; then
      playerctl play-pause
    else
      spotify="https://open.spotify.com/search/"


      browser_title="firefox"

      # Check if the browser is running
      if pgrep -x "$(basename "$browser_title")" > /dev/null; then
          # Check if the Spotify tab is open by searching for its title in the browser
          if xdotool search --name "$browser_title" search --name "Spotify"; then
              notify-send 'music player' "please play one of your favorite song."
          else
              browse "$spotify"
          fi
      else
          browse "$spotify"
      fi
    fi

    ;;
  --music-status)
    status=$(playerctl status 2>/dev/null)

    playing=false

    if [[ "$status" == "Playing" ]]; then
      playing=true
    elif [[ "$status" == "Paused" ]]; then
      playing=false
    else 
      playing=false
    fi

    echo $playing
  ;;
  --title)
      title=$(playerctl metadata spotify --format "{{ title }}" 2>/dev/null)
      if [[ -z "$title" ]]; then
        echo -n "No Title"
      else
        # echo -n "$title"
        normalize_title "$title"
      fi
    ;;
  --album)
      album=$(playerctl metadata spotify --format "{{ album }}" 2>/dev/null)
      if [[ -z "$album" ]]; then
        echo -n "Unknown"
      else
        echo -n "$album"
      fi
    ;;
  --artist)
      artist=$(playerctl metadata spotify --format "{{ artist }}" 2>/dev/null)
      if [[ -z "$artist" ]]; then
        echo -n "Unknown"
      else
        echo -n "$artist"
      fi
      ;;
  --artUrl)
    artUrl=$(playerctl metadata | awk '/mpris:artUrl/ {print $3}') 
      if [[ -z "$artUrl" ]]; then
        echo -n "$HOME/.config/qtile/widgets/dashboard/column_b/assets/cover_not_found.jpg"
      else
        echo -n "$artUrl"
      fi
    ;;
  *)
  ;;

esac
echo
