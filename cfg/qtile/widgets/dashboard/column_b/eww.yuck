(defpoll time :interval "1s" "./scripts/pomodoro --get-time")
(defpoll start_pause :interval "1s" "./scripts/pomodoro --get-icon")
(defpoll work_break :interval "1s" "./scripts/pomodoro --is-break-time")
(defpoll is_running :interval "1s" "./scripts/pomodoro --is-running")
(defpoll times_of_breaks :interval "1s" "./scripts/pomodoro --get-times-of-breaks")

(
  defwidget top_widget []
    (
    box :class "top_widget"
        (
          box
            :class "left"
            "hour and icons"
          
          (
            box
              :class "pomodoro"
              :orientation "v"
              (
                label :class "pom_title" :text "Pomodoro Timer"
              )
              
              (
                box :class "" :orientation "v" :space-evenly "false"
                (
                  label :class "time" :text time
                )
                  (
                    box
                      :class "buttons"
                      :space-evenly "false"
                      :halign "center"
                        (eventbox :cursor "pointer"
                          (
                            button 
                              :class "btn" 
                              :onclick {is_running ? "~/.config/qtile/widgets/dashboard/column_b/scripts/pomodoro --pause" : "~/.config/qtile/widgets/dashboard/column_b/scripts/pomodoro --start &" }
                              {start_pause}
                          )
                        )
                        (eventbox :cursor "pointer"
                          (
                            button 
                              :class "btn" 
                              :onclick "./scripts/pomodoro --reset"
                              "reset"
                          )
                        )
                  )
                  (
                    label :class {work_break == "true" ? "b" : "w"} :text {work_break == "true" ? "status: break" : "status: work"}
                  )
                  (
                    label :class "" :text {"breaks: " + times_of_breaks} 
                  )
              )
          )
        )
    )
)

; MUSIC PLAYER -------------------------------------
(defpoll artCover :interval "1s" "./scripts/music_player --artUrl")
(defpoll music_status :interval "1s" "./scripts/music_player --music-status")
(defpoll artist :interval "1s" "./scripts/music_player --artist")
(defpoll title :interval "1s" "./scripts/music_player --title")
(defpoll album :interval "1s" "./scripts/music_player --album")

(
  defwidget music_player []
  (
    box :class "music_player" :orientation "v"
        ;:hexpand "false"
        ;:vexpand "false"
        :space-evenly "false"
  (
      box 
          :class "header"
          (
            box  
              :class "cover_song"
              :style "background-image: url('${artCover}')"
          )
          (
            box 
              :class "player"
              (
                eventbox :class "" :cursor "pointer"
                (button :class "prev" :onclick "./scripts/music_player --prev" "󰒮")
              )
              (
                eventbox :class "" :cursor "pointer"
                (
                  button :class {music_status ? "playing" : "paused"} :onclick "./scripts/music_player --play-pause" 
                  {music_status ? "󰏤" : "󰐊"}
                )
              )
            
              (
                eventbox :class "" :cursor "pointer"
                (button :class "next" :onclick "./scripts/music_player --next" "󰒭")
              )
          )
      )
      (
      box 
        :class "info_song" 
        :orientation "v"
        :valign "center"
        ;:hexpand "false"
        ;:vexpand "false"
        ;:space-evenly "true"

        (label :class "title" :text title)
        (label :class "artist" :text {"artist: " + artist})
        (label :class "album" :text {"Album: " + album})
      )
    )

)

(
  defwidget column_b_layout []
    (
      box 
        :class "column"
    ;:spacing 0 
        ;:space-evenly "false" 
        ;:vexpand "false" 
        ;:hexpand "false"
        :orientation "v"
      (top_widget)
      (music_player)
    )
)

(
  defwindow column_b
    :wm-ignore true
    :stacking "fg"
    :windowtype "normal"
    :geometry (
      geometry 
        :y "40px"
        :x "26%"
    :width "48%"
        :height "95%"
        :anchor "top left"
    )
  (column_b_layout)
)
